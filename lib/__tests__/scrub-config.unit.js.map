{"version":3,"sources":["../../src/__tests__/scrub-config.unit.js"],"names":["describe","beforeEach","length","it","scrubber","to","equal","config","scrubUtils","be","an","ran","result","not","deep","url","expected","scrubUrl"],"mappings":";;AAAA;;AAEA;;AAEAA,SAAS,cAAT,EAAyB,YAAM;AAC7BC,aAAW,YAAM;AACf,kCAAiBC,MAAjB,GAA0B,CAA1B;AACD,GAFD;;AAIAC,KAAG,2BAAH,EAAgC,YAAM;AACpC,QAAMC,WAAW,SAAXA,QAAW,GAAW,CAAG,CAA/B;AACA,uCAAiBA,QAAjB;AACA,sBAAO,8BAAiB,CAAjB,CAAP,EAA4BC,EAA5B,CAA+BC,KAA/B,CAAqCF,QAArC;AACD,GAJD;;AAMAD,KAAG,sBAAH,EAA2B,YAAM;AAC/B,QAAMC,WAAW,SAAXA,QAAW,CAASG,MAAT,EAAiBC,UAAjB,EAA6B;AAC5C,wBAAOD,MAAP,EAAeF,EAAf,CAAkBI,EAAlB,CAAqBC,EAArB,CAAwB,QAAxB;AACA,wBAAOF,UAAP,EAAmBH,EAAnB,CAAsBC,KAAtB;;AAEAC,aAAOI,GAAP,GAAa,IAAb;AACA,aAAOJ,MAAP;AACD,KAND;;AAQA,uCAAiBH,QAAjB;AACA,QAAMG,SAAS,EAAEI,KAAK,KAAP,EAAf;AACA,QAAMC,SAAS,8BAAYL,MAAZ,CAAf;AACA,sBAAOK,MAAP,EAAeP,EAAf,CAAkBQ,GAAlB,CAAsBP,KAAtB,CAA4BC,MAA5B;AACA,sBAAOK,MAAP,EAAeP,EAAf,CAAkBS,IAAlB,CAAuBR,KAAvB,CAA6B,EAAEK,KAAK,IAAP,EAA7B;AACD,GAdD;AAeAX,WAAS,gBAAT,EAA2B,YAAM;AAC/BG,OAAG,+CAAH,EAAoD,YAAM;AACxD,UAAMY,MAAM,uBAAZ;AACA,UAAMC,WAAW,kBAAjB;;AAEA,wBAAO,mBAAMC,QAAN,CAAeF,GAAf,CAAP,EAA4BV,EAA5B,CAA+BC,KAA/B,CAAqCU,QAArC;AACD,KALD;AAMAb,OAAG,oBAAH,EAAyB,YAAM;AAC7B,UAAMY,MAAM,+BAAZ;AACA,UAAMC,WAAW,4BAAjB;;AAEA,wBAAO,mBAAMC,QAAN,CAAeF,GAAf,CAAP,EAA4BV,EAA5B,CAA+BC,KAA/B,CAAqCU,QAArC;AACD,KALD;AAMAb,OAAG,kCAAH,EAAuC,YAAM;AAC3C,UAAMY,MAAM,yCAAZ;AACA,UAAMC,WAAW,oCAAjB;;AAEA,wBAAO,mBAAMC,QAAN,CAAeF,GAAf,CAAP,EAA4BV,EAA5B,CAA+BC,KAA/B,CAAqCU,QAArC;AACD,KALD;AAMAb,OAAG,0BAAH,EAA+B,YAAM;AACnC,UAAMY,MAAM,+BAAZ;AACA,UAAMC,WAAW,sCAAjB;;AAEA,wBAAO,mBAAMC,QAAN,CAAeF,GAAf,CAAP,EAA4BV,EAA5B,CAA+BC,KAA/B,CAAqCU,QAArC;AACD,KALD;AAMD,GAzBD;AA0BD,CApDD","file":"scrub-config.unit.js","sourcesContent":["import { _configScrubbers, registerScrubber, scrubConfig, utils } from '../scrub-config';\r\n\r\nimport { expect } from 'chai';\r\n\r\ndescribe('scrub-config', () => {\r\n  beforeEach(() => {\r\n    _configScrubbers.length = 0;\r\n  });\r\n\r\n  it('should register scrubbers', () => {\r\n    const scrubber = function() { };\r\n    registerScrubber(scrubber);\r\n    expect(_configScrubbers[0]).to.equal(scrubber);\r\n  });\r\n\r\n  it('should run scrubbers', () => {\r\n    const scrubber = function(config, scrubUtils) {\r\n      expect(config).to.be.an('object');\r\n      expect(scrubUtils).to.equal(utils);\r\n\r\n      config.ran = true;\r\n      return config;\r\n    };\r\n\r\n    registerScrubber(scrubber);\r\n    const config = { ran: false };\r\n    const result = scrubConfig(config);\r\n    expect(result).to.not.equal(config);\r\n    expect(result).to.deep.equal({ ran: true });\r\n  });\r\n  describe('utils.scrubUrl', () => {\r\n    it('should change host and keep protocol and port', () => {\r\n      const url = 'https://meteor-up.com';\r\n      const expected = 'https://host.com';\r\n\r\n      expect(utils.scrubUrl(url)).to.equal(expected);\r\n    });\r\n    it('should change auth', () => {\r\n      const url = 'https://abc:123@meteor-up.com';\r\n      const expected = 'https://user:pass@host.com';\r\n\r\n      expect(utils.scrubUrl(url)).to.equal(expected);\r\n    });\r\n    it('should keep port, path, and hash', () => {\r\n      const url = 'https://meteor-up.com:3000/docs#plugins';\r\n      const expected = 'https://host.com:3000/docs#plugins';\r\n\r\n      expect(utils.scrubUrl(url)).to.equal(expected);\r\n    });\r\n    it('should change subdomains', () => {\r\n      const url = 'https://abc.xyz.meteor-up.com';\r\n      const expected = 'https://subdomain.subdomain.host.com';\r\n\r\n      expect(utils.scrubUrl(url)).to.equal(expected);\r\n    });\r\n  });\r\n});\r\n"]}