{"version":3,"sources":["../../src/__tests__/hooks.unit.js"],"names":["describe","beforeEach","Object","keys","prop","it","target","localScript","length","console","dir","method"],"mappings":";;AAAA;;;;AACA;;;;AAEAA,SAAS,OAAT,EAAkB,YAAW;AAC3BC,aAAW,YAAM;AAAA;AAAA;AAAA;;AAAA;AACf,2BAAmBC,OAAOC,IAAP,cAAnB,8HAAuC;AAAA,YAA5BC,IAA4B;;AACrC,eAAO,aAAMA,IAAN,CAAP;AACD;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhB,GAJD;;AAMAC,KAAG,yBAAH,EAA8B,YAAW;AACvC,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,0BAAO,aAAM,mBAAN,EAA2BE,MAA3B,KAAsC,CAA7C;AACA,0BAAO,aAAM,mBAAN,EAA2B,CAA3B,MAAkCF,MAAzC;AACD,GAND;;AAQAD,KAAG,0CAAH,EAA+C,YAAW;AACxD,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;;AAEA,6BAAa,mBAAb,EAAkCD,MAAlC;AACA,6BAAa,mBAAb,EAAkCA,MAAlC;;AAEA,0BAAO,aAAM,mBAAN,EAA2BE,MAA3B,KAAsC,CAA7C;AACA,0BAAO,aAAM,mBAAN,EAA2B,CAA3B,MAAkCF,MAAzC;AACD,GARD;;AAUAD,KAAG,8DAAH,EAAmE,YAAW;AAC5E,QAAMC,SAAS,EAAEC,aAAa,MAAf,EAAf;AACA,6BAAa,WAAb,EAA0BD,MAA1B;;AAEA,0BAAO,aAAM,mBAAN,EAA2B,CAA3B,MAAkCA,MAAzC;AACD,GALD;AAMAD,KAAG,8CAAH,EAAmD,YAAW;AAC5D,QAAMC,SAAS,SAATA,MAAS,GAAW,CAAE,CAA5B;;AAEA,6BAAa,WAAb,EAA0BA,MAA1B;AACAG,YAAQC,GAAR;;AAEA,0BAAO,aAAM,mBAAN,EAA2B,CAA3B,EAA8BC,MAA9B,KAAyCL,MAAhD;AACD,GAPD;AAQD,CAvCD","file":"hooks.unit.js","sourcesContent":["import assert from 'assert';\r\nimport { registerHook, hooks } from '../hooks';\r\n\r\ndescribe('hooks', function() {\r\n  beforeEach(() => {\r\n    for (const prop of Object.keys(hooks)) {\r\n      delete hooks[prop];\r\n    }\r\n  });\r\n\r\n  it('should create new hooks', function() {\r\n    const target = { localScript: 'test' };\r\n\r\n    registerHook('pre.default.setup', target);\r\n    assert(hooks['pre.default.setup'].length === 1);\r\n    assert(hooks['pre.default.setup'][0] === target);\r\n  });\r\n\r\n  it('should add hooks when some already exist', function() {\r\n    const target = { localScript: 'test' };\r\n\r\n    registerHook('pre.default.setup', target);\r\n    registerHook('pre.default.setup', target);\r\n\r\n    assert(hooks['pre.default.setup'].length === 2);\r\n    assert(hooks['pre.default.setup'][1] === target);\r\n  });\r\n\r\n  it('should add missing plugin name to hooks for default commands', function() {\r\n    const target = { localScript: 'test' };\r\n    registerHook('pre.setup', target);\r\n\r\n    assert(hooks['pre.default.setup'][0] === target);\r\n  });\r\n  it('should move functions to the method property', function() {\r\n    const target = function() {};\r\n\r\n    registerHook('pre.setup', target);\r\n    console.dir(hooks);\r\n\r\n    assert(hooks['pre.default.setup'][0].method === target);\r\n  });\r\n});\r\n"]}