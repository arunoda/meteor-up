{"version":3,"sources":["../../../src/plugins/proxy/index.js"],"names":["prepareConfig","_commands","description","commands","validate","proxy","config","app","env","domains","ssl","forceSSL","letsEncryptEmail"],"mappings":";;;;;;QAYgBA,a,GAAAA,a;;AAZhB;;IAAYC,S;;AAEZ;;;;;;;;AAEO,IAAMC,oCAAc,wCAApB;;AAEA,IAAMC,8BAAWF,SAAjB;;AAEA,IAAMG,8BAAW;AACtBC;AADsB,CAAjB;;AAIA,SAASL,aAAT,CAAuBM,MAAvB,EAA+B;AACpC,MAAI,CAACA,OAAOC,GAAR,IAAe,CAACD,OAAOD,KAA3B,EAAkC;AAChC,WAAOC,MAAP;AACD;;AAEDA,SAAOC,GAAP,CAAWC,GAAX,GAAiBF,OAAOC,GAAP,CAAWC,GAAX,IAAkB,EAAnC;;AAEAF,SAAOC,GAAP,CAAWC,GAAX,CAAe,cAAf,IAAiCF,OAAOD,KAAP,CAAaI,OAA9C;AACAH,SAAOC,GAAP,CAAWC,GAAX,CAAe,cAAf,IAAiCF,OAAOD,KAAP,CAAaK,GAAb,IAAoBJ,OAAOD,KAAP,CAAaK,GAAb,CAAiBC,QAArC,GAAgD,UAAhD,GAA6D,YAA9F;;AAEA,MAAIL,OAAOD,KAAP,CAAaK,GAAb,IAAoBJ,OAAOD,KAAP,CAAaK,GAAb,CAAiBE,gBAAzC,EAA2D;AACzDN,WAAOC,GAAP,CAAWC,GAAX,CAAe,kBAAf,IAAqCF,OAAOD,KAAP,CAAaI,OAAlD;AACAH,WAAOC,GAAP,CAAWC,GAAX,CAAe,mBAAf,IAAsCF,OAAOD,KAAP,CAAaK,GAAb,CAAiBE,gBAAvD;AACD;;AAED,SAAON,MAAP;AACD","file":"index.js","sourcesContent":["import * as _commands from './commands';\r\n\r\nimport validator from './validate';\r\n\r\nexport const description = 'Setup and manage reverse proxy and ssl';\r\n\r\nexport const commands = _commands;\r\n\r\nexport const validate = {\r\n  proxy: validator\r\n};\r\n\r\nexport function prepareConfig(config) {\r\n  if (!config.app || !config.proxy) {\r\n    return config;\r\n  }\r\n\r\n  config.app.env = config.app.env || {};\r\n\r\n  config.app.env['VIRTUAL_HOST'] = config.proxy.domains;\r\n  config.app.env['HTTPS_METHOD'] = config.proxy.ssl && config.proxy.ssl.forceSSL ? 'redirect' : 'noredirect';\r\n\r\n  if (config.proxy.ssl && config.proxy.ssl.letsEncryptEmail) {\r\n    config.app.env['LETSENCRYPT_HOST'] = config.proxy.domains;\r\n    config.app.env['LETSENCRYPT_EMAIL'] = config.proxy.ssl.letsEncryptEmail;\r\n  }\r\n\r\n  return config;\r\n}\r\n"]}