{"version":3,"sources":["../../../src/plugins/meteor/build.js"],"names":["log","buildApp","appPath","buildOptions","verbose","api","statSync","resolvePath","e","code","console","process","exit","Promise","resolve","reject","callback","err","buildMeteorApp","archiveIt","buildLocation","executable","args","debug","push","mobileSettings","JSON","stringify","serverOnly","server","allowIncompatibleUpdate","isWin","test","platform","env","comspec","concat","options","cwd","METEOR_HEADLESS","stdio","join","meteor","stdout","pipe","end","stderr","on","cb","bundlePath","sourceDir","output","createWriteStream","archive","gzip","gzipOptions","level","once","message","directory","finalize","module","exports"],"mappings":"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","file":"build.js","sourcesContent":["import { spawn } from 'child_process';\r\nimport archiver from 'archiver';\r\nimport fs from 'fs';\r\nimport debug from 'debug';\r\nimport { once } from 'lodash';\r\n\r\nconst log = debug('mup:module:meteor');\r\n\r\nfunction buildApp(appPath, buildOptions, verbose, api) {\r\n  // Check if the folder exists\r\n  try {\r\n    fs.statSync(api.resolvePath(appPath));\r\n  } catch (e) {\r\n\r\n    if (e.code === 'ENOENT') {\r\n      console.log(`${api.resolvePath(appPath)} does not exist`);\r\n    } else {\r\n      console.log(e);\r\n    }\r\n\r\n    process.exit(1);\r\n  }\r\n\r\n  // Make sure it is a Meteor app\r\n  try {\r\n    // checks for release file since there also is a\r\n    // .meteor folder in the user's home\r\n    fs.statSync(api.resolvePath(appPath, '.meteor/release'));\r\n  } catch (e) {\r\n    console.log(`${api.resolvePath(appPath)} is not a meteor app`);\r\n    process.exit(1);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const callback = err => {\r\n      if (err) {\r\n        reject(err);\r\n        return;\r\n      }\r\n      resolve();\r\n    };\r\n    buildMeteorApp(appPath, buildOptions, verbose, function(code) {\r\n      if (code === 0) {\r\n        archiveIt(buildOptions.buildLocation, api, callback);\r\n        return;\r\n      }\r\n      console.log('\\n=> Build Error. Check the logs printed above.');\r\n      process.exit(1);\r\n    });\r\n  });\r\n}\r\n\r\nfunction buildMeteorApp(appPath, buildOptions, verbose, callback) {\r\n  var executable = buildOptions.executable || 'meteor';\r\n  var args = [\r\n    'build',\r\n    '--directory',\r\n    buildOptions.buildLocation,\r\n    '--architecture',\r\n    'os.linux.x86_64'\r\n  ];\r\n\r\n  if (buildOptions.debug) {\r\n    args.push('--debug');\r\n  }\r\n\r\n  if (buildOptions.mobileSettings) {\r\n    args.push('--mobile-settings');\r\n    args.push(JSON.stringify(buildOptions.mobileSettings));\r\n  }\r\n\r\n  if (buildOptions.serverOnly) {\r\n    args.push('--server-only');\r\n  } else if (!buildOptions.mobileSettings) {\r\n    args.push('--mobile-settings');\r\n    args.push(appPath + '/settings.json');\r\n  }\r\n\r\n  if (buildOptions.server) {\r\n    args.push('--server');\r\n    args.push(buildOptions.server);\r\n  }\r\n\r\n  if (buildOptions.allowIncompatibleUpdate) {\r\n    args.push('--allow-incompatible-update');\r\n  }\r\n\r\n  var isWin = /^win/.test(process.platform);\r\n  if (isWin) {\r\n    // Sometimes cmd.exe not available in the path\r\n    // See: http://goo.gl/ADmzoD\r\n    executable = process.env.comspec || 'cmd.exe';\r\n    args = ['/c', 'meteor'].concat(args);\r\n  }\r\n\r\n  var options = {\r\n    cwd: appPath,\r\n    env: {\r\n      ...process.env,\r\n      METEOR_HEADLESS: 1\r\n    },\r\n    stdio: verbose ? 'inherit' : 'pipe'\r\n  };\r\n\r\n  log(`Build Path: ${appPath}`);\r\n  log(`Build Command:  ${executable} ${args.join(' ')}`);\r\n\r\n  var meteor = spawn(executable, args, options);\r\n\r\n  if (!verbose) {\r\n    meteor.stdout.pipe(process.stdout, { end: false });\r\n    meteor.stderr.pipe(process.stderr, { end: false });\r\n  }\r\n\r\n  meteor.on('error', e => {\r\n    console.log(options);\r\n    console.log(e);\r\n    console.log('This error usually happens when meteor is not installed.');\r\n  });\r\n  meteor.on('close', callback);\r\n}\r\n\r\nfunction archiveIt(buildLocation, api, cb) {\r\n  var callback = once(cb);\r\n  var bundlePath = api.resolvePath(buildLocation, 'bundle.tar.gz');\r\n  var sourceDir = api.resolvePath(buildLocation, 'bundle');\r\n\r\n  var output = fs.createWriteStream(bundlePath);\r\n  var archive = archiver('tar', {\r\n    gzip: true,\r\n    gzipOptions: {\r\n      level: 9\r\n    }\r\n  });\r\n\r\n  archive.pipe(output);\r\n  output.once('close', callback);\r\n\r\n  archive.once('error', function(err) {\r\n    console.log('=> Archiving failed:', err.message);\r\n    callback(err);\r\n  });\r\n\r\n  archive.directory(sourceDir, 'bundle').finalize();\r\n}\r\n\r\nmodule.exports = buildApp;\r\n"]}