{"version":3,"sources":["../../src/validate/index.js"],"names":["addPluginValidator","validate","utils","combineErrorDetails","VALIDATE_OPTIONS","improveErrors","_pluginValidators","rootPath","handler","generateSchema","topLevelKeys","servers","object","required","app","plugins","array","hooks","pattern","alternatives","localCommand","string","remoteCommand","method","func","Object","keys","forEach","key","any","validateAll","config","details","results","entries","property","validator","undefined","map","errors","error","message"],"mappings":";;;;;;;;;QASgBA,kB,GAAAA,kB;kBA+CQC,Q;;AAxDxB;;IAAYC,K;;AAEZ;;;;AACA;;;;;;;;IAEQC,mB,GAAyDD,K,CAAzDC,mB;IAAqBC,gB,GAAoCF,K,CAApCE,gB;IAAkBC,a,GAAkBH,K,CAAlBG,a;AAExC,IAAMC,gDAAoB,EAA1B;;AAEA,SAASN,kBAAT,CAA4BO,QAA5B,EAAsCC,OAAtC,EAA+C;AACpDF,oBAAkBC,QAAlB,IAA8BC,OAA9B;AACD;;AAED,SAASC,cAAT,GAA0B;AACxB,MAAMC,eAAe;AACnBC,aAAS,cAAIC,MAAJ,GAAaC,QAAb,EADU;AAEnBC,SAAK,cAAIF,MAAJ,EAFc;AAGnBG,aAAS,cAAIC,KAAJ,EAHU;AAInBC,WAAO,cAAIL,MAAJ,GAAaM,OAAb,CAAqB,IAArB,EAA2B,cAAIC,YAAJ,CAAiB,cAAIP,MAAJ,CAAW;AAC5DQ,oBAAc,cAAIC,MAAJ,EAD8C;AAE5DC,qBAAe,cAAID,MAAJ,EAF6C;AAG5DE,cAAQ,cAAIC,IAAJ;AAHoD,KAAX,CAAjB,EAKlC,cAAIA,IAAJ,EALkC,CAA3B;AAJY,GAArB;;AAaAC,SAAOC,IAAP,CAAYpB,iBAAZ,EAA+BqB,OAA/B,CAAuC,eAAO;AAC5CjB,iBAAakB,GAAb,IAAoB,cAAIC,GAAJ,EAApB;AACD,GAFD;;AAIA,SAAO,cAAIjB,MAAJ,GAAac,IAAb,CAAkBhB,YAAlB,CAAP;AACD;;AAED,SAASoB,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAIC,UAAU,EAAd;AACA,MAAIC,gBAAJ;;AAEAA,YAAU,cAAIhC,QAAJ,CAAa8B,MAAb,EAAqBtB,gBAArB,EAAuCL,gBAAvC,CAAV;AACA4B,YAAU7B,oBAAoB6B,OAApB,EAA6BC,OAA7B,CAAV;;AAEA,MAAIF,OAAOpB,OAAX,EAAoB;AAClBsB,cAAU,uBAAeF,OAAOpB,OAAtB,CAAV;AACAqB,cAAU7B,oBAAoB6B,OAApB,EAA6BC,OAA7B,CAAV;AACD;;AAV0B;AAAA;AAAA;;AAAA;AAY3B,yBAAoCR,OAAOS,OAAP,CAAe5B,iBAAf,CAApC,8HAAuE;AAAA;AAAA,UAA3D6B,QAA2D;AAAA,UAAjDC,SAAiD;;AACrE,UAAIL,OAAOI,QAAP,MAAqBE,SAAzB,EAAoC;AAClCJ,kBAAUG,UAAUL,MAAV,EAAkB7B,KAAlB,CAAV;AACA8B,kBAAU7B,oBAAoB6B,OAApB,EAA6BC,OAA7B,CAAV;AACD;AACF;AAjB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmB3B,SAAOD,QAAQM,GAAR,CAAYjC,aAAZ,CAAP;AACD;;AAEc,SAASJ,QAAT,CAAkB8B,MAAlB,EAA0B;AACvC,MAAIQ,SAAST,YAAYC,MAAZ,CAAb;AACA,SAAOQ,OAAOD,GAAP,CAAW,iBAAS;AACzB,WAAOE,MAAMC,OAAb;AACD,GAFM,CAAP;AAGD","file":"index.js","sourcesContent":["import * as utils from './utils';\r\n\r\nimport joi from 'joi';\r\nimport validateServer from './servers';\r\n\r\nconst { combineErrorDetails, VALIDATE_OPTIONS, improveErrors } = utils;\r\n\r\nexport const _pluginValidators = {};\r\n\r\nexport function addPluginValidator(rootPath, handler) {\r\n  _pluginValidators[rootPath] = handler;\r\n}\r\n\r\nfunction generateSchema() {\r\n  const topLevelKeys = {\r\n    servers: joi.object().required(),\r\n    app: joi.object(),\r\n    plugins: joi.array(),\r\n    hooks: joi.object().pattern(/.*/, joi.alternatives(joi.object({\r\n      localCommand: joi.string(),\r\n      remoteCommand: joi.string(),\r\n      method: joi.func()\r\n    }),\r\n    joi.func()\r\n    ))\r\n  };\r\n\r\n  Object.keys(_pluginValidators).forEach(key => {\r\n    topLevelKeys[key] = joi.any();\r\n  });\r\n\r\n  return joi.object().keys(topLevelKeys);\r\n}\r\n\r\nfunction validateAll(config) {\r\n  let details = [];\r\n  let results;\r\n\r\n  results = joi.validate(config, generateSchema(), VALIDATE_OPTIONS);\r\n  details = combineErrorDetails(details, results);\r\n\r\n  if (config.servers) {\r\n    results = validateServer(config.servers);\r\n    details = combineErrorDetails(details, results);\r\n  }\r\n\r\n  for (const [property, validator] of Object.entries(_pluginValidators)) {\r\n    if (config[property] !== undefined) {\r\n      results = validator(config, utils);\r\n      details = combineErrorDetails(details, results);\r\n    }\r\n  }\r\n\r\n  return details.map(improveErrors);\r\n}\r\n\r\nexport default function validate(config) {\r\n  let errors = validateAll(config);\r\n  return errors.map(error => {\r\n    return error.message;\r\n  });\r\n}\r\n"]}