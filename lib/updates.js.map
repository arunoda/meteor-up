{"version":3,"sources":["../src/updates.js"],"names":["log","Promise","resolve","params","timeout","package","name","auth","npm","uri","distTags","fetch","err","res","showStable","npmVersion","latest","nextVersion","next","local","version","split","slice","map","Number","n","remote","push","beta","length","available","command","text","green","console","padding","margin","align","borderColor"],"mappings":"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","file":"updates.js","sourcesContent":["import Npm from 'silent-npm-registry-client';\r\nimport boxen from 'boxen';\r\nimport chalk from 'chalk';\r\nimport debug from 'debug';\r\nimport pkg from '../package.json';\r\n\r\nlet log = debug('mup:updates');\r\n\r\nexport default function() {\r\n  log('checking for updates');\r\n  return new Promise(function(resolve) {\r\n    const params = {\r\n      timeout: 1000,\r\n      package: pkg.name,\r\n      auth: {}\r\n    };\r\n\r\n    const npm = new Npm();\r\n    const uri = 'https://registry.npmjs.org/npm';\r\n    npm.distTags.fetch(uri, params, function(err, res) {\r\n      if (err) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      let showStable = true;\r\n\r\n      const npmVersion = res.latest;\r\n      const nextVersion = res.next;\r\n\r\n      const local = pkg.version.split('.').slice(0, 3).map(n => Number(n.split('-')[0]));\r\n      const remote = npmVersion.split('.').map(n => Number(n.split('-')[0]));\r\n      const next = nextVersion.split('.').map(n => Number(n.split('-')[0]));\r\n      next.push(nextVersion.split('.')[2].split('beta')[1]);\r\n\r\n      const beta = pkg.version.split('.')[2].split('-').length > 1;\r\n\r\n      if (beta) {\r\n        local.push(pkg.version.split('.')[2].split('beta')[1]);\r\n      }\r\n\r\n      let available = remote[0] > local[0] ||\r\n        remote[0] === local[0] && remote[1] > local[1] ||\r\n        remote[1] === local[1] && remote[2] > local[2];\r\n\r\n      if (beta && !available) {\r\n        // check if stable for beta is available\r\n        available = remote[0] === local[0] &&\r\n          remote[1] === local[1] &&\r\n          remote[2] === local[2];\r\n      }\r\n\r\n      if (beta && !available) {\r\n        available = next[3] > local[3];\r\n        showStable = false;\r\n      }\r\n\r\n      if (available) {\r\n        let version = showStable ? npmVersion : nextVersion;\r\n        let command = showStable ? 'npm i -g mup' : 'npm i -g mup@next';\r\n\r\n        let text = `update available ${pkg.version} => ${version}`;\r\n        text += `\\nTo update, run ${chalk.green(command)}`;\r\n        console.log(\r\n          boxen(text, {\r\n            padding: 1,\r\n            margin: 1,\r\n            align: 'center',\r\n            borderColor: 'yellow'\r\n          })\r\n        );\r\n      }\r\n\r\n      resolve();\r\n    });\r\n  });\r\n}\r\n"]}